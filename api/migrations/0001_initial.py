# Generated by Django 5.1.3 on 2025-01-28 07:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(choices=[('VOO', 'VOO')], max_length=255)),
                ('dailyPrice', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, size=None)),
                ('cursor', models.DateTimeField(auto_now=True)),
                ('startDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaitlistEmail',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('date_enrolled', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?[1-9]\\d{1,14}$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PlaidCashbackTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=255)),
                ('transaction_id', models.CharField(max_length=255)),
                ('amount', models.FloatField()),
                ('authorized_date', models.DateTimeField(max_length=255)),
                ('deposited', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaidItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemId', models.CharField(max_length=255, unique=True)),
                ('accessToken', models.CharField(max_length=255)),
                ('transactionsCursor', models.CharField(default=None, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaidUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countryCodes', models.CharField(choices=[], default=None, max_length=2, null=True)),
                ('language', models.CharField(choices=[], default=None, max_length=2, null=True)),
                ('userToken', models.CharField(max_length=255)),
                ('userId', models.CharField(max_length=255)),
                ('clientUserId', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RobinhoodCashbackDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deposit_id', models.CharField(max_length=255)),
                ('rh_account_id', models.CharField(max_length=255)),
                ('rh_account_ach', models.CharField(max_length=255)),
                ('plaid_account_id', models.CharField(max_length=255)),
                ('mask', models.CharField(max_length=4)),
                ('state', models.CharField(max_length=255)),
                ('amount', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('expected_landing_datetime', models.DateTimeField()),
                ('cancel', models.CharField(max_length=255, null=True)),
                ('invested', models.BooleanField(default=False)),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.plaidcashbacktransaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RobinhoodStockOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=255)),
                ('cancel', models.CharField(max_length=255, null=True)),
                ('instrument_id', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('side', models.CharField(max_length=255)),
                ('quantity', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('pending_cancel_open_agent', models.CharField(max_length=255, null=True)),
                ('requested_amount', models.FloatField()),
                ('executed_amount', models.FloatField(null=True)),
                ('user_cancel_request_state', models.CharField(max_length=255)),
                ('deposit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.robinhoodcashbackdeposit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBrokerageInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brokerage', models.CharField(choices=[('robinhood', 'robinhood')], max_length=255)),
                ('symbol', models.CharField(choices=[('VOO', 'VOO')], max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
